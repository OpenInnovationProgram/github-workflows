name: review

on:
  push:
    branches: [main]

  workflow_call:
    inputs:
      argo_template_path:
        required: true
        type: string
      registry_path:
        type: string
        required: true
      prod_url:
        required: true
        type: string
      env_path:
        default: .env.prod
        required: true
        type: string
    secrets:
      #https://username:token@repoaddress.git:
      repo_auth_url:
        required: true
      gcr_json_key:
        required: true
jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "octocat@github.com"
      - name: Prod - Increment version & create build # incrementing version automatically creates build internally with new version
        run: npm version patch -m "[skip ci] %s"
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          CI: false
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
      - name: Get package info
        id: package
        uses: codex-team/action-nodejs-package-info@v1.1
      -
        name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}
      -
        name: set .env to use for build
        run: |
          mv ${{ inputs.env_path }} .env
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: "${{ inputs.registry_path }}/${{ steps.package.outputs.name }}:${{ steps.package.outputs.version }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max
      -
        name: deploy
        run: |
          git clone ${{secrets.repo_auth_url}} -b main
          echo "Updating image tag version ..."
          cd ${{ inputs.argo_template_path }}
          mkdir -p ${{ steps.package.outputs.name }}
          cp .prodapp.yaml.template ${{ steps.package.outputs.name }}/prod-app.yaml
          sed -i"" -e "s/APP_NAME/${{ steps.package.outputs.name }}/g"          ${{ steps.package.outputs.name }}/prod-app.yaml
          sed -i"" -e "s/VERSION_TAG/${{ steps.package.outputs.version }}/g"          ${{ steps.package.outputs.name }}/prod-app.yaml
          sed -i"" -e "s/PROD_URL/${{ inputs.prod_url }}/g" ${{ steps.package.outputs.name }}/prod-app.yaml
          echo "Pushing changes to argocd application repo ..."
          git config --global user.name "github-actions"
          git config --global user.email "octocat@github.com"
          git add -A
          git commit -m "[Cloud Builder] Updated image tag ${{ inputs.registry_path }}/${{ steps.package.outputs.name }}:${{ steps.package.outputs.version }} from commit ${{ steps.vars.outputs.sha_short }}"
          git push ${{secrets.repo_auth_url}} main


